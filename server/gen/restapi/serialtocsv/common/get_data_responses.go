// Code generated by go-swagger; DO NOT EDIT.

package common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"local.packages/gen/models"
)

// GetDataOKCode is the HTTP code returned for type GetDataOK
const GetDataOKCode int = 200

/*GetDataOK OK

swagger:response getDataOK
*/
type GetDataOK struct {

	/*
	  In: Body
	*/
	Payload []*models.CollectedData `json:"body,omitempty"`
}

// NewGetDataOK creates GetDataOK with default headers values
func NewGetDataOK() *GetDataOK {

	return &GetDataOK{}
}

// WithPayload adds the payload to the get data o k response
func (o *GetDataOK) WithPayload(payload []*models.CollectedData) *GetDataOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get data o k response
func (o *GetDataOK) SetPayload(payload []*models.CollectedData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDataOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.CollectedData, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetDataDefault Unexpected error

swagger:response getDataDefault
*/
type GetDataDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorV1 `json:"body,omitempty"`
}

// NewGetDataDefault creates GetDataDefault with default headers values
func NewGetDataDefault(code int) *GetDataDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDataDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get data default response
func (o *GetDataDefault) WithStatusCode(code int) *GetDataDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get data default response
func (o *GetDataDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get data default response
func (o *GetDataDefault) WithPayload(payload *models.ErrorV1) *GetDataDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get data default response
func (o *GetDataDefault) SetPayload(payload *models.ErrorV1) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDataDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
