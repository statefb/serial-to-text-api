// Code generated by go-swagger; DO NOT EDIT.

package common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PutSendHandlerFunc turns a function with the right signature into a put send handler
type PutSendHandlerFunc func(PutSendParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutSendHandlerFunc) Handle(params PutSendParams) middleware.Responder {
	return fn(params)
}

// PutSendHandler interface for that can handle valid put send params
type PutSendHandler interface {
	Handle(PutSendParams) middleware.Responder
}

// NewPutSend creates a new http.Handler for the put send operation
func NewPutSend(ctx *middleware.Context, handler PutSendHandler) *PutSend {
	return &PutSend{Context: ctx, Handler: handler}
}

/*PutSend swagger:route PUT /send Common putSend

send file to specified location.

*/
type PutSend struct {
	Context *middleware.Context
	Handler PutSendHandler
}

func (o *PutSend) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPutSendParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
