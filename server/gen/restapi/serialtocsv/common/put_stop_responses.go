// Code generated by go-swagger; DO NOT EDIT.

package common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"local.packages/gen/models"
)

// PutStopOKCode is the HTTP code returned for type PutStopOK
const PutStopOKCode int = 200

/*PutStopOK OK

swagger:response putStopOK
*/
type PutStopOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewPutStopOK creates PutStopOK with default headers values
func NewPutStopOK() *PutStopOK {

	return &PutStopOK{}
}

// WithPayload adds the payload to the put stop o k response
func (o *PutStopOK) WithPayload(payload interface{}) *PutStopOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put stop o k response
func (o *PutStopOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutStopOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*PutStopDefault Unexpected error

swagger:response putStopDefault
*/
type PutStopDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorV1 `json:"body,omitempty"`
}

// NewPutStopDefault creates PutStopDefault with default headers values
func NewPutStopDefault(code int) *PutStopDefault {
	if code <= 0 {
		code = 500
	}

	return &PutStopDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put stop default response
func (o *PutStopDefault) WithStatusCode(code int) *PutStopDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put stop default response
func (o *PutStopDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put stop default response
func (o *PutStopDefault) WithPayload(payload *models.ErrorV1) *PutStopDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put stop default response
func (o *PutStopDefault) SetPayload(payload *models.ErrorV1) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutStopDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
